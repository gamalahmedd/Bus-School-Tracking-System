
GraduationEmbeddedSide.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000037e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800100  00800100  000003f2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000424  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000464  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b3d  00000000  00000000  000004f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000846  00000000  00000000  00001031  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004ae  00000000  00000000  00001877  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000328  00000000  00000000  00001d28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006e6  00000000  00000000  00002050  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000990  00000000  00000000  00002736  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  000030c6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	62 c0       	rjmp	.+196    	; 0xca <__vector_1>
   6:	00 00       	nop
   8:	8b c0       	rjmp	.+278    	; 0x120 <__vector_2>
   a:	00 00       	nop
   c:	b4 c0       	rjmp	.+360    	; 0x176 <__vector_3>
   e:	00 00       	nop
  10:	dd c0       	rjmp	.+442    	; 0x1cc <__vector_4>
  12:	00 00       	nop
  14:	06 c1       	rjmp	.+524    	; 0x222 <__vector_5>
  16:	00 00       	nop
  18:	2f c1       	rjmp	.+606    	; 0x278 <__vector_6>
  1a:	00 00       	nop
  1c:	58 c1       	rjmp	.+688    	; 0x2ce <__vector_7>
  1e:	00 00       	nop
  20:	81 c1       	rjmp	.+770    	; 0x324 <__vector_8>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e7       	ldi	r30, 0x7E	; 126
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e0       	ldi	r26, 0x00	; 0
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 31       	cpi	r26, 0x10	; 16
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	02 d0       	rcall	.+4      	; 0xc8 <main>
  c4:	5a c1       	rjmp	.+692    	; 0x37a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <main>:
#include "LIB/Clock.h"

unsigned char char1[] = {0b00000000, 0b00000000, 0b00000111, 0b00000001, 0b00011111, 0b00000100, 0b00000000, 0b00000000};

int main(void)
{
  c8:	ff cf       	rjmp	.-2      	; 0xc8 <main>

000000ca <__vector_1>:
			break;
	}
}

ISR(INT0_vect)
{
  ca:	1f 92       	push	r1
  cc:	0f 92       	push	r0
  ce:	0f b6       	in	r0, 0x3f	; 63
  d0:	0f 92       	push	r0
  d2:	11 24       	eor	r1, r1
  d4:	0b b6       	in	r0, 0x3b	; 59
  d6:	0f 92       	push	r0
  d8:	2f 93       	push	r18
  da:	3f 93       	push	r19
  dc:	4f 93       	push	r20
  de:	5f 93       	push	r21
  e0:	6f 93       	push	r22
  e2:	7f 93       	push	r23
  e4:	8f 93       	push	r24
  e6:	9f 93       	push	r25
  e8:	af 93       	push	r26
  ea:	bf 93       	push	r27
  ec:	ef 93       	push	r30
  ee:	ff 93       	push	r31
	EXT_INTERRUPT0_FUNCTION_PTR();
  f0:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <EXT_INTERRUPT0_FUNCTION_PTR>
  f4:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <EXT_INTERRUPT0_FUNCTION_PTR+0x1>
  f8:	09 95       	icall
}
  fa:	ff 91       	pop	r31
  fc:	ef 91       	pop	r30
  fe:	bf 91       	pop	r27
 100:	af 91       	pop	r26
 102:	9f 91       	pop	r25
 104:	8f 91       	pop	r24
 106:	7f 91       	pop	r23
 108:	6f 91       	pop	r22
 10a:	5f 91       	pop	r21
 10c:	4f 91       	pop	r20
 10e:	3f 91       	pop	r19
 110:	2f 91       	pop	r18
 112:	0f 90       	pop	r0
 114:	0b be       	out	0x3b, r0	; 59
 116:	0f 90       	pop	r0
 118:	0f be       	out	0x3f, r0	; 63
 11a:	0f 90       	pop	r0
 11c:	1f 90       	pop	r1
 11e:	18 95       	reti

00000120 <__vector_2>:

ISR(INT1_vect)
{
 120:	1f 92       	push	r1
 122:	0f 92       	push	r0
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	0f 92       	push	r0
 128:	11 24       	eor	r1, r1
 12a:	0b b6       	in	r0, 0x3b	; 59
 12c:	0f 92       	push	r0
 12e:	2f 93       	push	r18
 130:	3f 93       	push	r19
 132:	4f 93       	push	r20
 134:	5f 93       	push	r21
 136:	6f 93       	push	r22
 138:	7f 93       	push	r23
 13a:	8f 93       	push	r24
 13c:	9f 93       	push	r25
 13e:	af 93       	push	r26
 140:	bf 93       	push	r27
 142:	ef 93       	push	r30
 144:	ff 93       	push	r31
	EXT_INTERRUPT1_FUNCTION_PTR();
 146:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <EXT_INTERRUPT1_FUNCTION_PTR>
 14a:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <EXT_INTERRUPT1_FUNCTION_PTR+0x1>
 14e:	09 95       	icall
}
 150:	ff 91       	pop	r31
 152:	ef 91       	pop	r30
 154:	bf 91       	pop	r27
 156:	af 91       	pop	r26
 158:	9f 91       	pop	r25
 15a:	8f 91       	pop	r24
 15c:	7f 91       	pop	r23
 15e:	6f 91       	pop	r22
 160:	5f 91       	pop	r21
 162:	4f 91       	pop	r20
 164:	3f 91       	pop	r19
 166:	2f 91       	pop	r18
 168:	0f 90       	pop	r0
 16a:	0b be       	out	0x3b, r0	; 59
 16c:	0f 90       	pop	r0
 16e:	0f be       	out	0x3f, r0	; 63
 170:	0f 90       	pop	r0
 172:	1f 90       	pop	r1
 174:	18 95       	reti

00000176 <__vector_3>:

ISR(INT2_vect)
{
 176:	1f 92       	push	r1
 178:	0f 92       	push	r0
 17a:	0f b6       	in	r0, 0x3f	; 63
 17c:	0f 92       	push	r0
 17e:	11 24       	eor	r1, r1
 180:	0b b6       	in	r0, 0x3b	; 59
 182:	0f 92       	push	r0
 184:	2f 93       	push	r18
 186:	3f 93       	push	r19
 188:	4f 93       	push	r20
 18a:	5f 93       	push	r21
 18c:	6f 93       	push	r22
 18e:	7f 93       	push	r23
 190:	8f 93       	push	r24
 192:	9f 93       	push	r25
 194:	af 93       	push	r26
 196:	bf 93       	push	r27
 198:	ef 93       	push	r30
 19a:	ff 93       	push	r31
	EXT_INTERRUPT2_FUNCTION_PTR();
 19c:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <EXT_INTERRUPT2_FUNCTION_PTR>
 1a0:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <EXT_INTERRUPT2_FUNCTION_PTR+0x1>
 1a4:	09 95       	icall
}
 1a6:	ff 91       	pop	r31
 1a8:	ef 91       	pop	r30
 1aa:	bf 91       	pop	r27
 1ac:	af 91       	pop	r26
 1ae:	9f 91       	pop	r25
 1b0:	8f 91       	pop	r24
 1b2:	7f 91       	pop	r23
 1b4:	6f 91       	pop	r22
 1b6:	5f 91       	pop	r21
 1b8:	4f 91       	pop	r20
 1ba:	3f 91       	pop	r19
 1bc:	2f 91       	pop	r18
 1be:	0f 90       	pop	r0
 1c0:	0b be       	out	0x3b, r0	; 59
 1c2:	0f 90       	pop	r0
 1c4:	0f be       	out	0x3f, r0	; 63
 1c6:	0f 90       	pop	r0
 1c8:	1f 90       	pop	r1
 1ca:	18 95       	reti

000001cc <__vector_4>:

ISR(INT3_vect)
{
 1cc:	1f 92       	push	r1
 1ce:	0f 92       	push	r0
 1d0:	0f b6       	in	r0, 0x3f	; 63
 1d2:	0f 92       	push	r0
 1d4:	11 24       	eor	r1, r1
 1d6:	0b b6       	in	r0, 0x3b	; 59
 1d8:	0f 92       	push	r0
 1da:	2f 93       	push	r18
 1dc:	3f 93       	push	r19
 1de:	4f 93       	push	r20
 1e0:	5f 93       	push	r21
 1e2:	6f 93       	push	r22
 1e4:	7f 93       	push	r23
 1e6:	8f 93       	push	r24
 1e8:	9f 93       	push	r25
 1ea:	af 93       	push	r26
 1ec:	bf 93       	push	r27
 1ee:	ef 93       	push	r30
 1f0:	ff 93       	push	r31
	EXT_INTERRUPT3_FUNCTION_PTR();
 1f2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <EXT_INTERRUPT3_FUNCTION_PTR>
 1f6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <EXT_INTERRUPT3_FUNCTION_PTR+0x1>
 1fa:	09 95       	icall
}
 1fc:	ff 91       	pop	r31
 1fe:	ef 91       	pop	r30
 200:	bf 91       	pop	r27
 202:	af 91       	pop	r26
 204:	9f 91       	pop	r25
 206:	8f 91       	pop	r24
 208:	7f 91       	pop	r23
 20a:	6f 91       	pop	r22
 20c:	5f 91       	pop	r21
 20e:	4f 91       	pop	r20
 210:	3f 91       	pop	r19
 212:	2f 91       	pop	r18
 214:	0f 90       	pop	r0
 216:	0b be       	out	0x3b, r0	; 59
 218:	0f 90       	pop	r0
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	0f 90       	pop	r0
 21e:	1f 90       	pop	r1
 220:	18 95       	reti

00000222 <__vector_5>:

ISR(INT4_vect)
{
 222:	1f 92       	push	r1
 224:	0f 92       	push	r0
 226:	0f b6       	in	r0, 0x3f	; 63
 228:	0f 92       	push	r0
 22a:	11 24       	eor	r1, r1
 22c:	0b b6       	in	r0, 0x3b	; 59
 22e:	0f 92       	push	r0
 230:	2f 93       	push	r18
 232:	3f 93       	push	r19
 234:	4f 93       	push	r20
 236:	5f 93       	push	r21
 238:	6f 93       	push	r22
 23a:	7f 93       	push	r23
 23c:	8f 93       	push	r24
 23e:	9f 93       	push	r25
 240:	af 93       	push	r26
 242:	bf 93       	push	r27
 244:	ef 93       	push	r30
 246:	ff 93       	push	r31
	EXT_INTERRUPT4_FUNCTION_PTR();
 248:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <EXT_INTERRUPT4_FUNCTION_PTR>
 24c:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <EXT_INTERRUPT4_FUNCTION_PTR+0x1>
 250:	09 95       	icall
}
 252:	ff 91       	pop	r31
 254:	ef 91       	pop	r30
 256:	bf 91       	pop	r27
 258:	af 91       	pop	r26
 25a:	9f 91       	pop	r25
 25c:	8f 91       	pop	r24
 25e:	7f 91       	pop	r23
 260:	6f 91       	pop	r22
 262:	5f 91       	pop	r21
 264:	4f 91       	pop	r20
 266:	3f 91       	pop	r19
 268:	2f 91       	pop	r18
 26a:	0f 90       	pop	r0
 26c:	0b be       	out	0x3b, r0	; 59
 26e:	0f 90       	pop	r0
 270:	0f be       	out	0x3f, r0	; 63
 272:	0f 90       	pop	r0
 274:	1f 90       	pop	r1
 276:	18 95       	reti

00000278 <__vector_6>:

ISR(INT5_vect)
{
 278:	1f 92       	push	r1
 27a:	0f 92       	push	r0
 27c:	0f b6       	in	r0, 0x3f	; 63
 27e:	0f 92       	push	r0
 280:	11 24       	eor	r1, r1
 282:	0b b6       	in	r0, 0x3b	; 59
 284:	0f 92       	push	r0
 286:	2f 93       	push	r18
 288:	3f 93       	push	r19
 28a:	4f 93       	push	r20
 28c:	5f 93       	push	r21
 28e:	6f 93       	push	r22
 290:	7f 93       	push	r23
 292:	8f 93       	push	r24
 294:	9f 93       	push	r25
 296:	af 93       	push	r26
 298:	bf 93       	push	r27
 29a:	ef 93       	push	r30
 29c:	ff 93       	push	r31
	EXT_INTERRUPT5_FUNCTION_PTR();
 29e:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <EXT_INTERRUPT5_FUNCTION_PTR>
 2a2:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <EXT_INTERRUPT5_FUNCTION_PTR+0x1>
 2a6:	09 95       	icall
}
 2a8:	ff 91       	pop	r31
 2aa:	ef 91       	pop	r30
 2ac:	bf 91       	pop	r27
 2ae:	af 91       	pop	r26
 2b0:	9f 91       	pop	r25
 2b2:	8f 91       	pop	r24
 2b4:	7f 91       	pop	r23
 2b6:	6f 91       	pop	r22
 2b8:	5f 91       	pop	r21
 2ba:	4f 91       	pop	r20
 2bc:	3f 91       	pop	r19
 2be:	2f 91       	pop	r18
 2c0:	0f 90       	pop	r0
 2c2:	0b be       	out	0x3b, r0	; 59
 2c4:	0f 90       	pop	r0
 2c6:	0f be       	out	0x3f, r0	; 63
 2c8:	0f 90       	pop	r0
 2ca:	1f 90       	pop	r1
 2cc:	18 95       	reti

000002ce <__vector_7>:

ISR(INT6_vect)
{
 2ce:	1f 92       	push	r1
 2d0:	0f 92       	push	r0
 2d2:	0f b6       	in	r0, 0x3f	; 63
 2d4:	0f 92       	push	r0
 2d6:	11 24       	eor	r1, r1
 2d8:	0b b6       	in	r0, 0x3b	; 59
 2da:	0f 92       	push	r0
 2dc:	2f 93       	push	r18
 2de:	3f 93       	push	r19
 2e0:	4f 93       	push	r20
 2e2:	5f 93       	push	r21
 2e4:	6f 93       	push	r22
 2e6:	7f 93       	push	r23
 2e8:	8f 93       	push	r24
 2ea:	9f 93       	push	r25
 2ec:	af 93       	push	r26
 2ee:	bf 93       	push	r27
 2f0:	ef 93       	push	r30
 2f2:	ff 93       	push	r31
	EXT_INTERRUPT6_FUNCTION_PTR();
 2f4:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <EXT_INTERRUPT6_FUNCTION_PTR>
 2f8:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <EXT_INTERRUPT6_FUNCTION_PTR+0x1>
 2fc:	09 95       	icall
}
 2fe:	ff 91       	pop	r31
 300:	ef 91       	pop	r30
 302:	bf 91       	pop	r27
 304:	af 91       	pop	r26
 306:	9f 91       	pop	r25
 308:	8f 91       	pop	r24
 30a:	7f 91       	pop	r23
 30c:	6f 91       	pop	r22
 30e:	5f 91       	pop	r21
 310:	4f 91       	pop	r20
 312:	3f 91       	pop	r19
 314:	2f 91       	pop	r18
 316:	0f 90       	pop	r0
 318:	0b be       	out	0x3b, r0	; 59
 31a:	0f 90       	pop	r0
 31c:	0f be       	out	0x3f, r0	; 63
 31e:	0f 90       	pop	r0
 320:	1f 90       	pop	r1
 322:	18 95       	reti

00000324 <__vector_8>:

ISR(INT7_vect)
{
 324:	1f 92       	push	r1
 326:	0f 92       	push	r0
 328:	0f b6       	in	r0, 0x3f	; 63
 32a:	0f 92       	push	r0
 32c:	11 24       	eor	r1, r1
 32e:	0b b6       	in	r0, 0x3b	; 59
 330:	0f 92       	push	r0
 332:	2f 93       	push	r18
 334:	3f 93       	push	r19
 336:	4f 93       	push	r20
 338:	5f 93       	push	r21
 33a:	6f 93       	push	r22
 33c:	7f 93       	push	r23
 33e:	8f 93       	push	r24
 340:	9f 93       	push	r25
 342:	af 93       	push	r26
 344:	bf 93       	push	r27
 346:	ef 93       	push	r30
 348:	ff 93       	push	r31
	EXT_INTERRUPT7_FUNCTION_PTR();
 34a:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 34e:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 352:	09 95       	icall
 354:	ff 91       	pop	r31
 356:	ef 91       	pop	r30
 358:	bf 91       	pop	r27
 35a:	af 91       	pop	r26
 35c:	9f 91       	pop	r25
 35e:	8f 91       	pop	r24
 360:	7f 91       	pop	r23
 362:	6f 91       	pop	r22
 364:	5f 91       	pop	r21
 366:	4f 91       	pop	r20
 368:	3f 91       	pop	r19
 36a:	2f 91       	pop	r18
 36c:	0f 90       	pop	r0
 36e:	0b be       	out	0x3b, r0	; 59
 370:	0f 90       	pop	r0
 372:	0f be       	out	0x3f, r0	; 63
 374:	0f 90       	pop	r0
 376:	1f 90       	pop	r1
 378:	18 95       	reti

0000037a <_exit>:
 37a:	f8 94       	cli

0000037c <__stop_program>:
 37c:	ff cf       	rjmp	.-2      	; 0x37c <__stop_program>
